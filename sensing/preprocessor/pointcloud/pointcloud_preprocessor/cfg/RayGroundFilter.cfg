#! /usr/bin/env python

PACKAGE = 'pointcloud_preprocessor'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator ()
# def add (self, name, paramtype, level, description, default = None, min = None, max = None, edit_method = ""):
gen.add ("base_frame", str_t, 0, "base frame", "base_link")
gen.add ("general_max_slope", double_t, 0, "Entire cloud space general slope, used on reclassification", 8.0, 0.0, 30.0)
gen.add ("local_max_slope", double_t, 0, "Local slope between points inside the same ray", 6.0, 0.0, 30.0)
gen.add ("initial_max_slope", double_t, 0, "Local slope between base_frame and initial point inside the same ray", 3.0, 0.0, 30.0)
gen.add ("radial_divider_angle", double_t, 0, "Angle in Degrees between dividers", 1.0, 0.1, 360.0)
gen.add ("concentric_divider_distance", double_t, 0, "Distance in meters between concentric divisions", 0.0, 0.0, 1.0)
gen.add ("min_height_threshold", double_t, 0, "Minimum height threshold between points", 0.15, 0.0, 2.0)
gen.add ("reclass_distance_threshold", double_t, 0, "Distance between points inside a ray at which re classification will occur", 0.1, 0.0, 2.0)
gen.add ("min_x", double_t, 0, "back side of vehicle.", -0.01, -1000, 1000)
gen.add ("max_x", double_t, 0, "front side of vehicle",  0.01, -1000, 1000)
gen.add ("min_y", double_t, 0, "left side of vehicle", -0.01, -1000, 1000)
gen.add ("max_y", double_t, 0, "right side of vehicle",  0.01, -1000, 1000)
gen.add ("use_vehicle_footprint", bool_t, 0, "use vehicle footprint polygon to calculate first ray point distance", False)

exit (gen.generate (PACKAGE, "pointcloud_preprocessor", "RayGroundFilter"))
